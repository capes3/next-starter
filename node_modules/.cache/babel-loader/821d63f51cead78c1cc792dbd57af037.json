{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\capen\\\\Desktop\\\\WorkProjects\\\\next-js-starter\\\\components\\\\AlternatingImg.js\";\nimport React from 'react'; //probably map the data into a child component, then use that child component to determine\n//which side of the page the image is rendered on.  On smaller screens just remove \n//the image from the flow altogether.  \n\nvar AlternatingImg =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AlternatingImg, _React$Component);\n\n  function AlternatingImg(props) {\n    var _this;\n\n    _classCallCheck(this, AlternatingImg);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AlternatingImg).call(this, props));\n    _this.state = {\n      selected: 0\n    };\n    return _this;\n  }\n\n  _createClass(AlternatingImg, [{\n    key: \"render\",\n    value: function render() {\n      var titleArray = this.props.data.title;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, titleArray.map(function (object, i) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(AlternatingItem, {\n          title: object,\n          index: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }));\n      }));\n    }\n  }]);\n\n  return AlternatingImg;\n}(React.Component);\n\nvar AlternatingItem =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(AlternatingItem, _React$Component2);\n\n  function AlternatingItem() {\n    _classCallCheck(this, AlternatingItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AlternatingItem).apply(this, arguments));\n  }\n\n  _createClass(AlternatingItem, [{\n    key: \"render\",\n    //tomorrow pick up here. You just need to access props and render respective elements\n    //depending on whether the key is odd or even.  \n    value: function render() {\n      if (this.props.index % 2 === 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"this is the key \", this.props.key);\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"this is not the key \", this.props.key);\n      }\n    }\n  }]);\n\n  return AlternatingItem;\n}(React.Component);\n\nexport default AlternatingImg;","map":{"version":3,"sources":["C:\\Users\\capen\\Desktop\\WorkProjects\\next-js-starter\\components\\AlternatingImg.js"],"names":["React","AlternatingImg","props","state","selected","titleArray","data","title","map","object","i","Component","AlternatingItem","index","key"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;;IAEMC,c;;;;;AACF,0BAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,wFAAMA,KAAN;AACA,UAAKC,KAAL,GAAW;AAACC,MAAAA,QAAQ,EAAC;AAAV,KAAX;AAFc;AAGjB;;;;6BAES;AACN,UAAMC,UAAU,GAAG,KAAKH,KAAL,CAAWI,IAAX,CAAgBC,KAAnC;AACF,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJF,UAAU,CAACG,GAAX,CAAe,UAACC,MAAD,EAASC,CAAT;AAAA,eAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,eAAD;AAAiB,UAAA,KAAK,EAAED,MAAxB;AAAgC,UAAA,KAAK,EAAEC,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADgB;AAAA,OAAf,CADI,CAAP;AAOD;;;;EAfwBV,KAAK,CAACW,S;;IAmB3BC,e;;;;;;;;;;;;;AAER;AACA;6BACc;AACN,UAAG,KAAKV,KAAL,CAAWW,KAAX,GAAiB,CAAjB,KAAuB,CAA1B,EAA4B;AAC5B,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACc,KAAKX,KAAL,CAAWY,GADzB,CAAP;AAGC,OAJD,MAIK;AACD,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACkB,KAAKZ,KAAL,CAAWY,GAD7B,CAAP;AAGH;AACJ;;;;EAd2Bd,KAAK,CAACW,S;;AAiBtC,eAAeV,cAAf","sourcesContent":["import React from 'react'\r\n\r\n//probably map the data into a child component, then use that child component to determine\r\n//which side of the page the image is rendered on.  On smaller screens just remove \r\n//the image from the flow altogether.  \r\n\r\nclass AlternatingImg extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={selected:0}\r\n    }\r\n\r\n    render () {\r\n        const titleArray = this.props.data.title\r\n      return <div>\r\n        {titleArray.map((object, i) => \r\n        <div>\r\n            <AlternatingItem title={object} index={i}/>\r\n        </div>\r\n        )}\r\n        </div>\r\n    }\r\n  }\r\n\r\n\r\n  class AlternatingItem extends React.Component {\r\n\r\n//tomorrow pick up here. You just need to access props and render respective elements\r\n//depending on whether the key is odd or even.  \r\n    render () {\r\n        if(this.props.index%2 === 0){\r\n        return <div>\r\n            this is the key {this.props.key}\r\n        </div>\r\n        }else{\r\n            return <div>\r\n                this is not the key {this.props.key}\r\n            </div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default AlternatingImg"]},"metadata":{},"sourceType":"module"}